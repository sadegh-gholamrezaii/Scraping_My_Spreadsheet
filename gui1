import tkinter as tk
from tkinter import ttk
from tkinter import filedialog
from tkcalendar import Calendar
from datetime import datetime, timedelta

class DataEntryApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Data Entry App")

        # Variable for file path
        self.file_path = tk.StringVar()

        # Entry for file path
        tk.Label(root, text="File Path:").grid(row=0, column=0)
        tk.Entry(root, textvariable=self.file_path, state="readonly").grid(row=0, column=1)
        tk.Button(root, text="Browse", command=self.browse_file).grid(row=0, column=2)

        # Entry for start date and time
        self.start_date = tk.StringVar()
        self.start_time = tk.StringVar()
        self.start_date.set((datetime.now() - timedelta(days=3)).strftime("%Y-%m-%d"))
        self.start_time.set("00:01")

        tk.Label(root, text="Start Date:").grid(row=1, column=0)
        self.start_date_entry = ttk.Entry(root, textvariable=self.start_date)
        self.start_date_entry.grid(row=1, column=1)
        tk.Button(root, text="Select Date", command=lambda: self.choose_date(self.start_date)).grid(row=1, column=2)

        tk.Label(root, text="Start Time:").grid(row=1, column=3)
        self.start_time_spinner = ttk.Spinbox(root, from_=0, to=23, width=2, format="%02.0f")
        self.start_time_spinner.grid(row=1, column=4)
        tk.Label(root, text=":").grid(row=1, column=5)
        self.start_minute_spinner = ttk.Spinbox(root, from_=0, to=59, width=2, format="%02.0f")
        self.start_minute_spinner.grid(row=1, column=6)

        # Entry for secondary date and time
        self.secondary_date = tk.StringVar()
        self.secondary_time = tk.StringVar()
        self.secondary_date.set(datetime.now().strftime("%Y-%m-%d"))
        self.secondary_time.set(datetime.now().strftime("%H:%M"))

        tk.Label(root, text="Secondary Date:").grid(row=2, column=0)
        self.secondary_date_entry = ttk.Entry(root, textvariable=self.secondary_date)
        self.secondary_date_entry.grid(row=2, column=1)
        tk.Button(root, text="Select Date", command=lambda: self.choose_date(self.secondary_date)).grid(row=2, column=2)

        tk.Label(root, text="Secondary Time:").grid(row=2, column=3)
        self.secondary_time_spinner = ttk.Spinbox(root, from_=0, to=23, width=2, format="%02.0f")
        self.secondary_time_spinner.grid(row=2, column=4)
        tk.Label(root, text=":").grid(row=2, column=5)
        self.secondary_minute_spinner = ttk.Spinbox(root, from_=0, to=59, width=2, format="%02.0f")
        self.secondary_minute_spinner.grid(row=2, column=6)

        # Button to submit data
        tk.Button(root, text="Submit Data", command=self.submit_data).grid(row=3, column=1, columnspan=2)

        # Text widget for displaying data
        self.data_text = tk.Text(root, height=10, width=50)
        self.data_text.grid(row=4, column=0, columnspan=7)

    def browse_file(self):
        file_path = filedialog.askopenfilename(filetypes=[("CSV files", "*.csv"), ("Excel files", "*.xlsx")])
        self.file_path.set(file_path)

    def choose_date(self, date_variable):
        top = tk.Toplevel(self.root)
        cal = Calendar(top, selectmode="day", year=int(datetime.now().year), month=int(datetime.now().month), day=int(datetime.now().day))
        cal.pack()
        cal.bind("<Button-1>", lambda event, date_var=date_variable: self.update_date(event, date_var))

    def update_date(self, event, date_variable):
        selected_date = event.widget.get_date()
        date_variable.set(selected_date.strftime("%Y-%m-%d"))
        date_entry = event.widget.master.master.children['!entry']
        date_entry.delete(0, tk.END)
        date_entry.insert(0, date_variable.get())

    def submit_data(self):
        data = {
            'File Path': self.file_path.get(),
            'Start Date': self.start_date.get(),
            'Start Time': f"{self.start_time_spinner.get()}:{self.start_minute_spinner.get()}",
            'Secondary Date': self.secondary_date.get(),
            'Secondary Time': f"{self.secondary_time_spinner.get()}:{self.secondary_minute_spinner.get()}"
        }

        # Add data to the text widget
        self.data_text.insert(tk.END, f"Data Submitted:\n{data}\n\n")

if __name__ == "__main__":
    root = tk.Tk()
    app = DataEntryApp(root)
    root.mainloop()
